(def @i8$ptr.length_ (params (%this i8*) (%acc u64)) u64 (do
  (if (== (load %this) 0) (do
    (return %acc)
  ))

  (return (call-tail @i8$ptr.length_ (args (cast i8* (+ 1 (cast u64 %this))) (+ %acc 1))))
))

(def @i8$ptr.length (params (%this i8*)) u64 (do
  (return (call-tail @i8$ptr.length_ (args %this 0)))
))


(struct %struct.String
  (%ptr i8*)
  (%size u64))

(def @String.makeEmpty params %struct.String (do
  (auto %result %struct.String)
  (store (cast i8* (i64 0)) (index %result 0))
  (store 0 (index %result 1))
  (return (load %result))
))

(def @String$ptr.set (params (%this %struct.String*) (%charptr i8*)) void (do
  (store %charptr (index %this 0))
  (store (call @i8$ptr.length (args %charptr)) (index %this 1))
  (return-void)
))

(str-table 
  (0 "'%s' has length %lu.\0A\00")
  (1 "global string example\00")
)

(decl @printf (types i8* ...) i32)

(def @main params i32 (do
  (auto %string %struct.String)
  (let %string_val (call @String.makeEmpty args))
  (store %string_val %string)

  (call @String$ptr.set (args %string (str-get 1)))

  (call-vargs @printf (args 
    (str-get 0) (load (index %string 0)) (load (index %string 1))))
  (call-vargs @printf (args 
    (str-get 0) (str-get 1) (call @i8$ptr.length (args (str-get 1)))))

  (return 0)
))