[
  {
    "category": "awaiting triage",
    "todos": [
      "consider making Expr -> Tall Value to differentiate Tall",
      "consider removing Value from Expr choice after norm",
      "consider flipping Index operands",
      "consider making some things in the pass after normalization Name, not Value",
      "check sign/zero extension semantics for ptrtoint of u64 vs i64",
      "field-get and field-set accessors that turn into index/{load,store} or {insertvalue,extractvalue}",
      "allow for more than 1 str-table with custom access keys",
      "function scope string-table allocation"
    ]
  },
  {
    "category": "passes",
    "todos": [
      "passes should return the new texp with it's new proof",
      "type inference",
      "name scope resolution",
      "make blocks have lexical scope",
      "type check pass",
      "string extraction pass"
    ]
  },
  {
    "category": "backbone",
    "todos": [
      "while loops",
      "int truncation and signed/zero extension",
      "global variables? immutable?"
    ]
  },
  {
    "category": "cornerstone",
    "todos": [
      "keyword resolution",
      "keyword + choice grammar error reporting",
      "add name deduplication for lookup in matcher",
      "proof algebra?",
      "environmentless pass conglomeration?",
      "pass ordering analysis?",
      "module system with decl/def deduplication",
      "include, include after pass, include after process",
      "source tracking between passes",
      "texp pretty printer"
    ]
  },
  {
    "category": "lib2-string",
    "todos": [
      "empty-append",
      "append-empty",
      "append null checks?"
    ]
  },
  {
    "category": "done",
    "todos": [
      "proof structure should be parallel with texp structure #cornerstone",
      "normalization #passes",
      "type expansion #passes",
      "more bitcasts #backbone",
      "basic-append #lib2-string",
      "self-append #lib2-string",
      "basic grammar error reporting #cornerstone"
    ]
  }
]
