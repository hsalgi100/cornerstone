[
  {
    "category": "awaiting triage",
    "todos": [
      "error out on wordless texps"
      "llvm has a 'null' literal that we should support",
      "consider adding contracts (result and input predicates)",
      "consider making Expr -> Tall Value to differentiate Tall",
      "consider removing Value from Expr choice after norm",
      "consider flipping Index operands",
      "consider flipping Store operands",
      "consider making some things in the pass after normalization Name, not Value",
      "check sign/zero extension semantics for ptrtoint of u64 vs i64",
      "field-get and field-set accessors that turn into index/{load,store} or {insertvalue,extractvalue}",
      "allow for more than 1 str-table with custom access keys",
      "function scope string-table allocation",
      "consider hierarchical nonrecursive choice in grammar",
      "check that truncation happens from the same signedness to the same signedness"
    ]
  },
  {
    "category": "passes",
    "todos": [
      "passes should return the new texp with it's new proof",
      "type inference",
      "name scope resolution",
      "make blocks have lexical scope",
      "type check pass",
      "string extraction pass"
    ]
  },
  {
    "category": "backbone",
    "todos": [
      "while loops",
      "int truncation and signed/zero extension",
      "global variables? immutable?"
    ]
  },
  {
    "category": "cornerstone",
    "todos": [
      "keyword resolution",
      "keyword + choice grammar error reporting",
      "add name deduplication for lookup in matcher",
      "proof algebra?",
      "environmentless pass conglomeration?",
      "pass ordering analysis?",
      "module system with decl/def deduplication",
      "include, include after pass, include after process",
      "source tracking between passes",
      "texp pretty printer"
    ]
  },
  { 
    "category": "lib2",
    "todos": [
      "basic parser",
      "basic gen"
    ]
  },
  {
    "category": "string #lib2",
    "todos": [
      "empty-append",
      "append-empty",
      "append null checks?"
    ]
  },
  {
    "category": "done",
    "todos": [
      "normalization #passes",
      "type expansion #passes",
      "more bitcasts #backbone",
      "proof structure should be parallel with texp structure #cornerstone",
      "basic-append #string #lib2",
      "self-append #string #lib2",
      "basic grammar error reporting #cornerstone",
      "basic file and reader #lib2",
      "texp.push and .parenPrint #lib2"
    ]
  }
]
